Add-Type -AssemblyName UIAutomationClient

try {
    # 1. find the BigFix Support Center dialog
    $root = [System.Windows.Automation.AutomationElement]::RootElement
    $dlg  = $root.FindFirst(
        [System.Windows.Automation.TreeScope]::Children,
        (New-Object System.Windows.Automation.PropertyCondition(
            [System.Windows.Automation.AutomationElement]::NameProperty,
            "BigFix Support Center"
        ))
    )
    if (-not $dlg) { throw "Dialog 'BigFix Support Center' not found." }

    # 2. find the Tab control
    $tab = $dlg.FindFirst(
        [System.Windows.Automation.TreeScope]::Descendants,
        (New-Object System.Windows.Automation.PropertyCondition(
            [System.Windows.Automation.AutomationElement]::ControlTypeProperty,
            [System.Windows.Automation.ControlType]::Tab
        ))
    )
    if (-not $tab) { throw "Tab control not found." }

    # 3. find the TabItem named "Progress"
    $progress = $tab.FindFirst(
        [System.Windows.Automation.TreeScope]::Children,
        (New-Object System.Windows.Automation.AndCondition(
            (New-Object System.Windows.Automation.PropertyCondition(
                [System.Windows.Automation.AutomationElement]::ControlTypeProperty,
                [System.Windows.Automation.ControlType]::TabItem
            )),
            (New-Object System.Windows.Automation.PropertyCondition(
                [System.Windows.Automation.AutomationElement]::NameProperty,
                "Progress"
            ))
        ))
    )
    if (-not $progress) { throw "TabItem 'Progress' not found." }

    # 4. select it via SelectionItemPattern
    $sel = $progress.GetCurrentPattern(
        [System.Windows.Automation.SelectionItemPattern]::Pattern
    )
    if ($sel) {
        $sel.Select()
        Write-Output "✅ 'Progress' tab selected."
    }
    else {
        throw "SelectionItemPattern not available on that TabItem."
    }
}
catch {
    Write-Error "❌ Failed to select tab: $_"
}

